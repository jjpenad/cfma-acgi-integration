#!/usr/bin/env python3
"""
Setup script to create .env file for ACGI Contact Export

This script helps users create a .env file with their ACGI credentials.
"""

import os
import sys

def create_env_file():
    """Create .env file with user input"""
    env_file = os.path.join(os.path.dirname(__file__), '.env')
    
    print("ACGI Contact Export - Environment Setup")
    print("=" * 40)
    print("This script will create a .env file with your ACGI credentials.")
    print("You can edit the .env file later to change settings.")
    print()
    
    # Check if .env already exists
    if os.path.exists(env_file):
        response = input(".env file already exists. Overwrite? (y/N): ").strip().lower()
        if response != 'y':
            print("Setup cancelled.")
            return
    
    # Get credentials from user
    print("Please enter your ACGI credentials:")
    username = input("ACGI Username: ").strip()
    password = input("ACGI Password: ").strip()
    
    print("\nEnvironment options:")
    print("1. test (cetdigitdev)")
    print("2. prod (cetdigit)")
    env_choice = input("Select environment (1 or 2): ").strip()
    
    environment = "test" if env_choice == "1" else "prod"
    
    # Optional settings
    print("\nOptional settings (press Enter for defaults):")
    start_id = input("Start Customer ID (default: 1): ").strip() or "1"
    end_id = input("End Customer ID (default: 30000): ").strip() or "30000"
    batch_size = input("Batch Size (default: 100): ").strip() or "100"
    timeout = input("Request Timeout in seconds (default: 60): ").strip() or "60"
    delay = input("Delay between requests in seconds (default: 0.5): ").strip() or "0.5"
    
    # Create .env content
    env_content = f"""# ACGI Contact Export Configuration
# Generated by setup_env.py

# Required ACGI Credentials
ACGI_USERNAME={username}
ACGI_PASSWORD={password}
ACGI_ENVIRONMENT={environment}

# Optional Export Settings
EXPORT_START_ID={start_id}
EXPORT_END_ID={end_id}
EXPORT_BATCH_SIZE={batch_size}
EXPORT_TIMEOUT={timeout}
EXPORT_DELAY={delay}

# Optional Output Settings
EXPORT_OUTPUT_DIR=export_scripts
EXPORT_INCLUDE_TIMESTAMP=true

# Optional Logging Settings
EXPORT_LOG_LEVEL=INFO
EXPORT_LOG_FILE=export_scripts/contact_export.log
"""
    
    # Write .env file
    try:
        with open(env_file, 'w') as f:
            f.write(env_content)
        
        print(f"\n✅ .env file created successfully at {env_file}")
        print("\nYou can now run the export script:")
        print("  python export_contacts.py")
        print("\nOr edit the .env file to change settings.")
        
    except Exception as e:
        print(f"❌ Error creating .env file: {str(e)}")
        sys.exit(1)

def main():
    """Main function"""
    try:
        create_env_file()
    except KeyboardInterrupt:
        print("\nSetup cancelled.")
    except Exception as e:
        print(f"Setup failed: {str(e)}")
        sys.exit(1)

if __name__ == "__main__":
    main()
